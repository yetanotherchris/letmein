name: Build and Publish Docker Image

on:
  push:
    tags:
      - 'v*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: letmein
          POSTGRES_USER: letmein
          POSTGRES_PASSWORD: letmein123
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Setup Node
        uses: actions/setup-node@v4

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Build frontend assets for tests
        run: |
          cd src/Letmein.Web/wwwroot
          npm ci
          npm run build
          cd ../../..

      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: meta
        run: |
          # Extract tag name (e.g., refs/tags/v1.0.1 -> v1.0.1)
          TAG=${GITHUB_REF#refs/tags/}

          # Remove 'v' prefix if present (e.g., v1.0.1 -> 1.0.1)
          VERSION=${TAG#v}

          # Remove any leading dots or dashes (invalid for Docker tags)
          VERSION=${VERSION#.}
          VERSION=${VERSION#-}

          # Validate version is not empty
          if [ -z "$VERSION" ]; then
            echo "Error: Version is empty after processing tag: $TAG"
            exit 1
          fi

          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Git tag: ${TAG}"
          echo "Docker version: ${VERSION}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.title=Letmein
            org.opencontainers.image.description=Encrypted notes service with temporary storage
            org.opencontainers.image.version=${{ steps.meta.outputs.version }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image details
        run: |
          echo "Image pushed to:"
          echo "  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}"
          echo "  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
